<Window x:Class="InteractiveNeuralNetworks.Views.BuilderView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InteractiveNeuralNetworks"
        xmlns:commands="clr-namespace:InteractiveNeuralNetworks.Commands"
        xmlns:converters="clr-namespace:InteractiveNeuralNetworks.Converters"
        xmlns:vm="clr-namespace:InteractiveNeuralNetworks.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800">

    <Window.DataContext>
        <vm:BuilderViewModel />
    </Window.DataContext>
    <Window.Resources>
        <converters:RectConverter x:Key="RectConverter" />
        <converters:DragDropParametersConverter x:Key="DragDropParametersConverter" />
    </Window.Resources>
    <Grid>
        <DockPanel>
            <StackPanel Orientation="Vertical" DockPanel.Dock="Top">
                <Button Content="Click Me!" Command="{Binding Path=ClickMeButtonCommand}"></Button>
            </StackPanel>
            <Border BorderBrush="Black" BorderThickness="1" Margin="20">
                <Border ClipToBounds="True">
                    <ItemsControl ItemsSource="{Binding WorkspaceViewModel.WorkspaceItems, UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas x:Name="canvas"
                                AllowDrop="True">
                                    <Canvas.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="{Binding WorkspaceViewModel.ZoomFactor}"
                                                            ScaleY="{Binding WorkspaceViewModel.ZoomFactor}"/>
                                            <TranslateTransform X="{Binding WorkspaceViewModel.CanvasPanOffset.X}"
                                                                Y="{Binding WorkspaceViewModel.CanvasPanOffset.Y}"/>
                                        </TransformGroup>
                                    </Canvas.RenderTransform>
                                    <Canvas.Background>
                                        <DrawingBrush TileMode="Tile"
                                              Viewport="{Binding WorkspaceViewModel.CanvasViewPortPos, 
                                                         Converter={StaticResource RectConverter},
                                                         ConverterParameter='50,50'}" ViewportUnits="Absolute"
                                              Viewbox="0,0,50,50" ViewboxUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="Black">
                                                        <GeometryDrawing.Geometry>
                                                            <EllipseGeometry Center="25, 25" RadiusX="2" RadiusY="2"/>
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Canvas.Background>
                                </Canvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                                <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Black" BorderThickness="{Binding Border, UpdateSourceTrigger=PropertyChanged}">
                                    <Rectangle 
                                        Width="{Binding Width}" 
                                        Height="{Binding Height}" 
                                        Fill="{Binding Color}"
                                        AllowDrop="True"/>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <i:Interaction.Behaviors>
                        <commands:EventToCommandBehavior EventName="MouseLeftButtonDown" Command="{Binding WorkspaceViewModel.MouseLeftButtonDownCommand}" />
                        <commands:EventToCommandBehavior EventName="MouseMove" Command="{Binding WorkspaceViewModel.MouseMoveCommand}" />
                        <commands:EventToCommandBehavior EventName="DragOver" Command="{Binding WorkspaceViewModel.DragOverCommand}"/>
                        <commands:EventToCommandBehavior EventName="MouseLeftButtonUp" Command="{Binding WorkspaceViewModel.MouseLeftButtonUpCommand}"/>
                        <commands:EventToCommandBehavior EventName="MouseWheel" Command="{Binding WorkspaceViewModel.MouseWheelCommand}"/>
                    </i:Interaction.Behaviors>
                </Border>
            </Border>
        </DockPanel>
    </Grid>
</Window>
